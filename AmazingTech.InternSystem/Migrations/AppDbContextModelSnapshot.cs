// <auto-generated />
using System;
using AmazingTech.InternSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AmazingTech.InternSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.Cauhoi", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CauHoi", "dbo");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.CauhoiCongnghe", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCauhoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdCongNghe")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdCauhoi");

                    b.HasIndex("IdCongNghe");

                    b.ToTable("CauHoiCongNghe", "dbo");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.Comment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdNguoiComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdNguoiDuocComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdNguoiComment");

                    b.HasIndex("IdNguoiDuocComment");

                    b.ToTable("Comment", "dbo");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.CongNghe", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdViTri")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdViTri");

                    b.ToTable("CongNghe", "dbo");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.CongNgheDuAn", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCongNghe")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdDuAn")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdCongNghe");

                    b.HasIndex("IdDuAn");

                    b.ToTable("CongNgheDuAn", "dbo");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.Dashboard", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Interned")
                        .HasColumnType("int");

                    b.Property<int>("Interning")
                        .HasColumnType("int");

                    b.Property<int>("Interviewed")
                        .HasColumnType("int");

                    b.Property<int>("Passed")
                        .HasColumnType("int");

                    b.Property<int>("ReceivedCV")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Dashboard", "dbo");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.DuAn", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LeaderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ThoiGianBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianKetThuc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LeaderId");

                    b.ToTable("DuAn", "dbo");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.InternInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailCaNhan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailTruong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("GPA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdKiThucTap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdTruong")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("KiThucTapId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinkCV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkFacebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MSSV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NganhHoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Round")
                        .HasColumnType("int");

                    b.Property<string>("Sdt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SdtNguoiThan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrinhDoTiengAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IdTruong");

                    b.HasIndex("KiThucTapId");

                    b.HasIndex("UserId");

                    b.ToTable("InternInfo", "dbo");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.KiThucTap", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdTruong")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTruong");

                    b.ToTable("KiThucTap", "dbo");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.LichPhongVan", b =>
                {
                    b.Property<string>("IdNguoiDuocPhongVan")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdNguoiPhongVan")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DaXacNhanMail")
                        .HasColumnType("bit");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiaDiemPhongVan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InterviewForm")
                        .HasColumnType("int");

                    b.Property<int>("KetQua")
                        .HasColumnType("int");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ThoiGianPhongVan")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("TimeDuration")
                        .HasColumnType("time");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdNguoiDuocPhongVan", "IdNguoiPhongVan");

                    b.HasIndex("IdNguoiPhongVan");

                    b.ToTable("LichPhongVan", "dbo");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.NhomZalo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdMentor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinkNhom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MentorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenNhom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MentorId");

                    b.ToTable("NhomZalo", "dbo");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.ThongBao", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdNguoiGui")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdNguoiNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TinhTrang")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdNguoiGui");

                    b.HasIndex("IdNguoiNhan");

                    b.ToTable("ThongBao", "dbo");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.TruongHoc", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SoTuanThucTap")
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TruongHoc", "dbo");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("HoVaTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("VerificationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VerificationTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isConfirmed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", "dbo");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.UserDuAn", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdDuAn")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ViTri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdDuAn");

                    b.HasIndex("UserId");

                    b.ToTable("UserDuAn", "dbo");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.UserNhomZalo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdNhomZalo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("JoinedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LeftTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IdNhomZalo");

                    b.HasIndex("UserId");

                    b.ToTable("UserNhomZalo", "dbo");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.UserViTri", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UsersId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ViTrisId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UsersId");

                    b.HasIndex("ViTrisId");

                    b.ToTable("UserViTri", "dbo");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.ViTri", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DuAnId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LinkNhomZalo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DuAnId");

                    b.ToTable("ViTri", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", "dbo");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", "dbo");
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<string>("RolesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("RoleUser", "dbo");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.Role", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole");

                    b.HasDiscriminator().HasValue("Role");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.CauhoiCongnghe", b =>
                {
                    b.HasOne("AmazingTech.InternSystem.Data.Entity.Cauhoi", "cauhoi")
                        .WithMany("CauhoiCongnghe")
                        .HasForeignKey("IdCauhoi")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AmazingTech.InternSystem.Data.Entity.CongNghe", "CongNghe")
                        .WithMany("CauhoiCongnghe")
                        .HasForeignKey("IdCongNghe")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CongNghe");

                    b.Navigation("cauhoi");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.Comment", b =>
                {
                    b.HasOne("AmazingTech.InternSystem.Data.Entity.User", "NguoiComment")
                        .WithMany("Comments")
                        .HasForeignKey("IdNguoiComment")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AmazingTech.InternSystem.Data.Entity.InternInfo", "NguoiDuocComment")
                        .WithMany("Comments")
                        .HasForeignKey("IdNguoiDuocComment")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("NguoiComment");

                    b.Navigation("NguoiDuocComment");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.CongNghe", b =>
                {
                    b.HasOne("AmazingTech.InternSystem.Data.Entity.ViTri", "ViTri")
                        .WithMany()
                        .HasForeignKey("IdViTri")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ViTri");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.CongNgheDuAn", b =>
                {
                    b.HasOne("AmazingTech.InternSystem.Data.Entity.CongNghe", "CongNghe")
                        .WithMany("CongNgheDuAns")
                        .HasForeignKey("IdCongNghe")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AmazingTech.InternSystem.Data.Entity.DuAn", "DuAn")
                        .WithMany("CongNgheDuAns")
                        .HasForeignKey("IdDuAn")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CongNghe");

                    b.Navigation("DuAn");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.DuAn", b =>
                {
                    b.HasOne("AmazingTech.InternSystem.Data.Entity.User", "Leader")
                        .WithMany()
                        .HasForeignKey("LeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leader");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.InternInfo", b =>
                {
                    b.HasOne("AmazingTech.InternSystem.Data.Entity.TruongHoc", "Truong")
                        .WithMany("Interns")
                        .HasForeignKey("IdTruong")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AmazingTech.InternSystem.Data.Entity.KiThucTap", "KiThucTap")
                        .WithMany("Interns")
                        .HasForeignKey("KiThucTapId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AmazingTech.InternSystem.Data.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("KiThucTap");

                    b.Navigation("Truong");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.KiThucTap", b =>
                {
                    b.HasOne("AmazingTech.InternSystem.Data.Entity.TruongHoc", "Truong")
                        .WithMany("KiThucTaps")
                        .HasForeignKey("IdTruong")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Truong");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.LichPhongVan", b =>
                {
                    b.HasOne("AmazingTech.InternSystem.Data.Entity.User", "NguoiDuocPhongVan")
                        .WithMany("LichPhongVans_DuocPhongVan")
                        .HasForeignKey("IdNguoiDuocPhongVan")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AmazingTech.InternSystem.Data.Entity.User", "NguoiPhongVan")
                        .WithMany("LichPhongVans_PhongVan")
                        .HasForeignKey("IdNguoiPhongVan")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("NguoiDuocPhongVan");

                    b.Navigation("NguoiPhongVan");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.NhomZalo", b =>
                {
                    b.HasOne("AmazingTech.InternSystem.Data.Entity.User", "Mentor")
                        .WithMany()
                        .HasForeignKey("MentorId");

                    b.Navigation("Mentor");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.ThongBao", b =>
                {
                    b.HasOne("AmazingTech.InternSystem.Data.Entity.User", "NguoiGui")
                        .WithMany("ThongBao_NguoiGui")
                        .HasForeignKey("IdNguoiGui")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AmazingTech.InternSystem.Data.Entity.User", "NguoiNhan")
                        .WithMany("ThongBao_NguoiNhan")
                        .HasForeignKey("IdNguoiNhan")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("NguoiGui");

                    b.Navigation("NguoiNhan");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.UserDuAn", b =>
                {
                    b.HasOne("AmazingTech.InternSystem.Data.Entity.DuAn", "DuAn")
                        .WithMany("UserDuAns")
                        .HasForeignKey("IdDuAn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmazingTech.InternSystem.Data.Entity.User", "User")
                        .WithMany("UserDuAns")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DuAn");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.UserNhomZalo", b =>
                {
                    b.HasOne("AmazingTech.InternSystem.Data.Entity.NhomZalo", "NhomZalo")
                        .WithMany("UserNhomZalos")
                        .HasForeignKey("IdNhomZalo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AmazingTech.InternSystem.Data.Entity.User", "User")
                        .WithMany("UserNhomZalos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("NhomZalo");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.UserViTri", b =>
                {
                    b.HasOne("AmazingTech.InternSystem.Data.Entity.User", "User")
                        .WithMany("UserViTris")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AmazingTech.InternSystem.Data.Entity.ViTri", "ViTri")
                        .WithMany("UserViTris")
                        .HasForeignKey("ViTrisId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("ViTri");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.ViTri", b =>
                {
                    b.HasOne("AmazingTech.InternSystem.Data.Entity.DuAn", null)
                        .WithMany("ViTris")
                        .HasForeignKey("DuAnId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AmazingTech.InternSystem.Data.Entity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AmazingTech.InternSystem.Data.Entity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmazingTech.InternSystem.Data.Entity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AmazingTech.InternSystem.Data.Entity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("AmazingTech.InternSystem.Data.Entity.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AmazingTech.InternSystem.Data.Entity.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.Cauhoi", b =>
                {
                    b.Navigation("CauhoiCongnghe");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.CongNghe", b =>
                {
                    b.Navigation("CauhoiCongnghe");

                    b.Navigation("CongNgheDuAns");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.DuAn", b =>
                {
                    b.Navigation("CongNgheDuAns");

                    b.Navigation("UserDuAns");

                    b.Navigation("ViTris");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.InternInfo", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.KiThucTap", b =>
                {
                    b.Navigation("Interns");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.NhomZalo", b =>
                {
                    b.Navigation("UserNhomZalos");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.TruongHoc", b =>
                {
                    b.Navigation("Interns");

                    b.Navigation("KiThucTaps");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("LichPhongVans_DuocPhongVan");

                    b.Navigation("LichPhongVans_PhongVan");

                    b.Navigation("ThongBao_NguoiGui");

                    b.Navigation("ThongBao_NguoiNhan");

                    b.Navigation("UserDuAns");

                    b.Navigation("UserNhomZalos");

                    b.Navigation("UserViTris");
                });

            modelBuilder.Entity("AmazingTech.InternSystem.Data.Entity.ViTri", b =>
                {
                    b.Navigation("UserViTris");
                });
#pragma warning restore 612, 618
        }
    }
}
